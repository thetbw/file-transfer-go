name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (default: latest)'
        required: false
        default: 'latest'

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '18'

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Set up Yarn
      run: |
        corepack enable
        yarn --version

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: |
          chuan-next/node_modules
          chuan-next/.next/cache
        key: ${{ runner.os }}-node-${{ hashFiles('chuan-next/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Go dependencies
      run: |
        go mod download
        go mod tidy

    - name: Install Node.js dependencies
      run: |
        cd chuan-next
        yarn install --frozen-lockfile

    - name: Build application
      run: |
        chmod +x build-fullstack.sh
        ./build-fullstack.sh

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.DOCKER_REPO }}
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ vars.DOCKER_PASSWORD }}

    - name: Determine image tag
      id: meta
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="latest"
        fi
        
        # 同时使用 commit SHA 作为额外标签
        COMMIT_SHA="${{ github.sha }}"
        SHORT_SHA="${COMMIT_SHA:0:7}"
        
        echo "tag=${TAG}" >> $GITHUB_OUTPUT
        echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
        echo "timestamp=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: Debug
      run: |
         ls 
         ls dist
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.tag }}
          ${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.short_sha }}
          ${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.timestamp }}
        labels: |
          org.opencontainers.image.title=File Transfer Go
          org.opencontainers.image.description=WebRTC-based file transfer application
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Docker image digest
      run: echo "Image pushed with digest ${{ steps.build.outputs.digest }}"

    - name: Build summary
      run: |
        echo "## 🐳 Docker构建完成" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**镜像标签:**" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.short_sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.timestamp }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**支持的平台:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**运行命令:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker run -p 8080:8080 ${{ vars.DOCKER_REPO }}/nekogeek/file-transfer-go:${{ steps.meta.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY